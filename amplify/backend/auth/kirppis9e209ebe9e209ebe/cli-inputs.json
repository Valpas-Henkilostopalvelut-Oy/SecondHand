{
  "version": "1",
  "cognitoConfig": {
    "identityPoolName": "kirppis9e209ebe_identitypool_9e209ebe",
    "allowUnauthenticatedIdentities": false,
    "resourceNameTruncated": "kirppi9e209ebe",
    "userPoolName": "kirppis9e209ebe_userpool_9e209ebe",
    "autoVerifiedAttributes": [
      "email"
    ],
    "mfaConfiguration": "OFF",
    "mfaTypes": [
      "SMS Text Message"
    ],
    "smsAuthenticationMessage": "Your authentication code is {####}",
    "smsVerificationMessage": "Your verification code is {####}",
    "emailVerificationSubject": "Action Required: Confirm Your Email Address",
    "emailVerificationMessage": "Hello,\n\nThank you for registering with us. To complete your registration and verify your email address, please use the verification code provided below:\n\nVerification Code: {####}\n\nPlease enter this code in the provided field on the verification page. This code is valid for 30 minutes and is for one-time use only.\n\nIf you did not initiate this request, please ignore this email or contact support if you have concerns about unauthorized activity.\n\nThank you,\nSecondHand Finland",
    "defaultPasswordPolicy": false,
    "passwordPolicyMinLength": 8,
    "passwordPolicyCharacters": [],
    "requiredAttributes": [
      "email"
    ],
    "aliasAttributes": [],
    "userpoolClientGenerateSecret": false,
    "userpoolClientRefreshTokenValidity": 30,
    "userpoolClientWriteAttributes": [],
    "userpoolClientReadAttributes": [],
    "userpoolClientLambdaRole": "kirppi9e209ebe_userpoolclient_lambda_role",
    "userpoolClientSetAttributes": false,
    "sharedId": "9e209ebe",
    "resourceName": "kirppis9e209ebe9e209ebe",
    "authSelections": "identityPoolAndUserPool",
    "useDefault": "manual",
    "thirdPartyAuth": false,
    "usernameAttributes": [
      "email"
    ],
    "userPoolGroups": false,
    "adminQueries": false,
    "triggers": {},
    "hostedUI": false,
    "userPoolGroupList": [],
    "adminQueryGroup": "Admin",
    "serviceName": "Cognito",
    "usernameCaseSensitive": false,
    "useEnabledMfas": true,
    "authRoleArn": {
      "Fn::GetAtt": [
        "AuthRole",
        "Arn"
      ]
    },
    "unauthRoleArn": {
      "Fn::GetAtt": [
        "UnauthRole",
        "Arn"
      ]
    },
    "breakCircularDependency": true,
    "dependsOn": [],
    "authProviders": [],
    "parentStack": {
      "Ref": "AWS::StackId"
    },
    "permissions": []
  }
}