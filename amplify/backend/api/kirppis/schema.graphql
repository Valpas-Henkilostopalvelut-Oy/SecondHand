type Category {
  id: String
  name: String
}

type Location {
  city: String
  lat: String
  lng: String
  country: String
  iso2: String
  admin_name: String
  capital: String
  population: String
  population_proper: String
  driveto: AWSURL
  address: String
  zip: String
  iframe: String
}

type Categories @model @auth(rules: [{allow: public, operations: [read]}, {allow: groups, groups: ["admin"], operations: [read, create, update, delete]}]) {
  id: ID!
  createdBy: String
  name: String
}

type Image {
  key: String
  id: String
}

type Contact {
  phone: String
  email: AWSEmail
  website: AWSURL
}

type Opentime {
  day: String
  start: AWSDateTime
  end: AWSDateTime
  id: String
  isClosed: Boolean
}

type Priceitem {
  name: String
  price: Float
  id: Int
}

type Sellplaces {
  all: Int
  free: Int
}

type Store @model @auth(rules: [{allow: groups, groups: ["admin"], operations: [read, create, update, delete]}, {allow: owner}, {allow: public, operations: [read]}]) {
  id: ID!
  isConfirmed: Boolean
  name: String
  description: String
  categories: [Category]
  services: [Int]
  clicked: String
  sellplaces: Sellplaces
  pricelist: [Priceitem]
  embedmap: AWSURL
  opentimes: [Opentime]
  contact: Contact
  location: Location
  imgs: [Image]
}
 