type Category {
  id: String
  name: String
}

type Location {
  city: String
  lat: String
  lng: String
  country: String
  iso2: String
  admin_name: String
  capital: String
  population: String
  population_proper: String
  driveto: AWSURL
  address: String
  zip: String
  iframe: String
}

type Categories
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["admin"] }
    ]
  ) {
  id: ID!
  createdBy: String
  name: String
}

type Image {
  key: String
  id: String
}

type Contact {
  phone: String
  email: AWSEmail
  website: AWSURL
}

type Opentime {
  day: String
  start: AWSDateTime
  end: AWSDateTime
  id: String
  isClosed: Boolean
}

type Priceitem {
  name: String
  price: Float
  id: Int
}

type Sellplaces {
  all: Int
  free: Int
}

type Social {
  facebook: String
  instagram: String
  twitter: String
  youtube: String
  tiktok: String
}

type SideButton {
  text: String!
  link: String!
  color: String
  background: String
  id: String
}

type Side {
  image: String
  title: String!
  button: SideButton
}

type StoreSettingsValidation {
  status: Boolean
  message: String
  from: AWSDateTime
  to: AWSDateTime
}

type StoreSettings {
  isPaid: StoreSettingsValidation
  isHidden: StoreSettingsValidation
  isConfirmed: StoreSettingsValidation
  isPremium: StoreSettingsValidation
  isPromoted: StoreSettingsValidation
}

type Ads
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["admin"] }
    ]
  ) {
  id: ID!
  firm: String!
  site: String
  backgroundColor: String
  left: Side!
  right: Side
  isHidden: Boolean
}

type User
  @model
  @auth(
    rules: [
      { allow: public, operations: [read, create] }
      { allow: groups, groups: ["admin"] }
    ]
  ) {
  id: ID!
  username: ID!
  email: AWSEmail
  stores: [String]
  role: String
}

type Store
  @model
  @auth(
    rules: [
      { allow: public, operations: [read, create, update] }
      { allow: groups, groups: ["admin"] }
    ]
  ) {
  id: ID!
  username: ID!
  type: String
  name: String
  description: String
  categories: [Category]
  clicked: String
  pricelist: [Priceitem]
  opentimes: [Opentime]
  contact: Contact
  location: Location
  imgs: [Image]
  social: Social!
  isConfirmed: Boolean
  settings: StoreSettings!
  logo: String
}

type Evaluation
  @model
  @auth(
    rules: [
      { allow: public, operations: [create] }
      { allow: groups, groups: ["admin"] }
    ]
  ) {
  id: ID!
  username: ID
  name: String!
  email: AWSEmail!
  phone: String!
  description: String!
  category: String!
  type: String!
  images: [String]!
}
